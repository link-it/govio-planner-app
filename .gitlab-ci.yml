stages:
    - test
    - build
    - deploy
    - upload
    - release

variables: 
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    SONAR_HOST_URL: "http://localsonarqube:9000/"
    SONAR_TOKEN: "squ_35c667f3567119d5702ffa5fb92ca6eaac5889a6"
    SONAR_USER: "gitlab-runner"
    SONAR_PASSWORD: "Password@123"
    DEPLOY_STAGING_SSH_HOST: "ec2-user@172.16.1.121"
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/govio-planner-app/${CI_COMMIT_TAG}"
default:
    cache:
        paths:
            - .m2/repository/
            - target/
    image: maven:3-openjdk-11

build_angular:
    stage: build
    image: node:18.15.0-alpine3.17
    script:
      - npm install
      - npm run production-govio-planner
      - tar czf govio-planner-app.tgz dist/*  
    artifacts:
        paths:
          - govio-planner-app.tgz
    rules:
      - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging"'

upload:
    stage: upload
    image: curlimages/curl:latest
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - 'curl -k --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file govio-planner-app.tgz ${PACKAGE_REGISTRY_URL}/govio-planner-app-${CI_COMMIT_TAG}.tgz'

release:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    rules:
        - if: $CI_COMMIT_TAG
    before_script:
        - apk --no-cache add openssl ca-certificates
        - mkdir -p /usr/local/share/ca-certificates/extra
        - openssl s_client -connect ${CI_SERVER_HOST}:${CI_SERVER_PORT} -servername ${CI_SERVER_HOST} -showcerts </dev/null 2>/dev/null | sed -e '/-----BEGIN/,/-----END/!d' | tee "/usr/local/share/ca-certificates/${CI_SERVER_HOST}.crt" >/dev/null
        - update-ca-certificates
    script:
        - 'release-cli create --name "govio-planner-app-$CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG 
          --assets-link "[ 
            {\"name\":\"govio-planner-app-${CI_COMMIT_TAG}.tgz\", \"url\":\"${PACKAGE_REGISTRY_URL}/govio-planner-app-${CI_COMMIT_TAG}.tgz\"}
          ]"'

deploy_staging:
  stage: deploy
  image: kroniak/ssh-client
  script:
    - cp -r /tmp/ssh/ ~/.ssh
    - scp -r govio-planner-app.tgz $DEPLOY_STAGING_SSH_HOST:/tmp/
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo tar xvf /tmp/govio-planner-app.tgz'
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo rm -rf /usr/share/nginx/html/govio-planner-app/* && sudo cp -r dist/govio-planner/* /usr/share/nginx/html/govio-planner-app/'
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo rm -rf /tmp/govio-planner-app.tgz dist'
  only:
    - staging
